name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./FunnyLittleWebsite/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/funnylittlewebsite:latest
          platforms: linux/amd64,linux/arm64

      - name: Setup SSH Key
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > $HOME/.ssh/github_actions_rsa
          chmod 600 $HOME/.ssh/github_actions_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> $HOME/.ssh/known_hosts

      - name: Deploy on Server
        env:
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        run: |
          ssh -i $HOME/.ssh/github_actions_rsa ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "
            docker pull ${{ secrets.DOCKER_USERNAME }}/funnylittlewebsite:latest
            docker stop funnylittlewebsite || true
            docker rm funnylittlewebsite || true
            docker run -d --name funnylittlewebsite -p 5252:443 -e ASPNETCORE_ENVIRONMENT=Production \
              -e ASPNETCORE_URLS=https://+:443 -e ASPNETCORE_Kestrel__Certificates__Default__Password=${CERTIFICATE_PASSWORD} \
              -e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/cert.pfx \
              ${{ secrets.DOCKER_USERNAME }}/funnylittlewebsite:latest
          "